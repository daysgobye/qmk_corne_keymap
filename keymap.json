{
  "version": 1,
  "notes": "",
  "documentation": "\"This file is a QMK Configurator export. You can import this at <https://config.qmk.fm>. It can also be used directly with QMK's source code.\n\nTo setup your QMK environment check out the tutorial: <https://docs.qmk.fm/#/newbs>\n\nYou can convert this file to a keymap.c using this command: `qmk json2c {keymap}`\n\nYou can compile this keymap using this command: `qmk compile {keymap}`\"\n",
  "keyboard": "crkbd/rev1",
  "keymap": "crkbd_rev1_layout_split_3x6_3_mine",
  "layout": "LAYOUT_split_3x6_3",
  "layers": [
    ["KC_ESC", "KC_Q", "KC_W", "KC_E", "KC_R", "KC_T", "KC_Y", "KC_U", "KC_I", "KC_O", "KC_P", "KC_BSLS", "KC_TAB", "KC_A", "KC_S", "KC_D", "KC_F", "KC_G", "KC_H", "KC_J", "KC_K", "KC_L", "KC_SCLN", "KC_QUOT", "KC_LSPO", "KC_Z", "KC_X", "KC_C", "KC_V", "KC_B", "KC_N", "KC_M", "KC_COMM", "KC_DOT", "KC_SLSH", "KC_RSPC", "KC_LGUI", "LT(2,KC_SPC)", "LCTL_T(KC_BSPC)", "RALT_T(KC_DEL)", "LT(1,KC_ENT)", "KC_GRV"],
    ["KC_GRV", "KC_EXLM", "KC_AT", "KC_HASH", "KC_DLR", "KC_PERC", "KC_CIRC", "KC_AMPR", "KC_ASTR", "KC_LBRC", "KC_RBRC", "KC_BSLS", "KC_TAB", "KC_UNDS", "KC_PLUS", "KC_MINS", "KC_EQL", "KC_TILD", "KC_SLSH", "KC_LT", "KC_GT", "KC_LCBR", "KC_RCBR", "KC_QUOT", "KC_LSPO", "KC_1", "KC_2", "KC_3", "KC_4", "KC_5", "KC_6", "KC_7", "KC_8", "KC_9", "KC_0", "KC_RSPC", "KC_LGUI", "KC_SPC", "LCTL_T(KC_BSPC)", "RALT_T(KC_DEL)", "KC_ENT", "KC_GRV"],
    ["KC_ESC", "LGUI(KC_GRV)", "LCTL(KC_LALT)", "LGUI(KC_LALT)", "ANY(SGUI(LCTL(KC_4)))", "ANY(LCTL(LGUI(KC_3)))", "LGUI(KC_LBRC)", "LGUI(KC_RBRC)", "KC_UP", "ANY(LSFT(LGUI(KC_LBRC)))", "ANY(LSFT(LGUI(KC_RBRC)))", "KC_BSLS", "KC_TAB", "LSFT(KC_LCTL)", "LGUI(KC_LCTL)", "LSFT(KC_LALT)", "LSFT(KC_LGUI)", "KC_NO", "KC_NO", "KC_LEFT", "KC_DOWN", "KC_RGHT", "ANY(LSFT(LGUI(KC_L)))", "KC_QUOT", "KC_LSPO", "LGUI(KC_Z)", "LGUI(KC_X)", "LGUI(KC_C)", "LGUI(KC_V)", "RESET", "KC_NO", "KC_NO", "KC_NO", "KC_NO", "LGUI(KC_SLSH)", "KC_RSPC", "KC_LGUI", "KC_SPC", "LCTL_T(KC_BSPC)", "RALT_T(KC_DEL)", "KC_ENT", "KC_GRV"]
  ],
  "author": ""
}